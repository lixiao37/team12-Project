Seong-min:
For correctness, Ali made his functions work as intended. His coding style 
is easily readable due to spacing. Ali marginally followed the pep8 guildline, 
due to missing certain conventions in his code. The quality of Ali's 
documentation is decent and explains the purpose of a big chunk of code. All he 
needs to do is add few more lines of commenting and describe what happens when 
the data is already in the database or when connection to the database fails. 
Ali did not write any test cases.
File Reviewed: parser.py [searchArticle, add_article, add_website & add_citation]
File Timestamp: 11/11/2014 5:40 PM

Alan:
Code is present functions correctly and output was of expected format.
Code is easy for both other users to read and understand.
Code follows PEP8 coding conventions, minor format issues in get_screenshot.
Code comments and docstring provide descriptive detail to function flow.
No tests were available to test functions on.
File Reviewed: parser.py [get_meta_data & get_screenshot]
File Timestamp: 11/11/2014, 05:38 PM

Zhen:
 - The correctness was great, no conflicts with the design and no waste of 
   the memory.
 - The coding style was great, variables were meaningful and easy to follow.
 - The coding guideline was bad.Some lines are too long [line 92, 97],
   which confilts the pep8.Also, there is no docstring.
 - The quality of documentation was good. Commenting style is maintained and 
   easy to follow, but there is lack of document in conditional 
   statements [line 91].
 - Since all the reviewed codes were about the UI, it is hard to test it using 
   the unittest.
 - File reviewed, userinterface.py [line 87-117]
 - Timestamp, 21:09 Nov.25 2014

Chun:
- The code returns a string as required and produces the correct output
  visually in the UI (shows pie graphs)
- The code's styling is good/consistent and follows the conventions that
  we have agreed on as a group
- The code needs more comments to describe the confusing parts,
  someone who did not work with this file will be confused when
  they are reading the code
- The functions needs doc strings to describe what parameters are being
  passed in, what the funciton does and what it returns
- File Reviewed: userinterface.py [line 175-190 192-204]
- File Timestamp: November 11, 2014

Ali:
- The overall correctness was correct. The design pattern(Facada) was 
   implemented properly and it was consistent. However, the Parser class itself
   needs to be a generic class. This will allow further enhancements using the
   Parser class. Coding style was great, very good use of blank spaces, the 
   reader can easily see different parts of the code. Pep8 was not followed, 
   hence it was causing issues when I was running pep8 against the file. Testing
   needs to be done extensively. So far, there are only around ten test-cases,
   however there needs to be more. Since Parser will server as an essential part
   of the application, it needs to be stable.
   File reviewed, parser.py. Timestamp, Nov. 25 09:40 PM.
